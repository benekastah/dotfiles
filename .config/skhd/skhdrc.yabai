# # Window
# 
# - Focus window directionally
# - Focus to most recently used window
# - Close focused window
# - Change layout of windows on current screen
#     - Equal vertical split
#     - Equal horizontal split
#     - 2/3, 1/3 split (2 windows)
#     - 1/3, 2/3 split (2 windows)
#     - rotate
# - toggle native fullscreen on/off
# - toggle fullscreen on/off
# - minimize window
# - unminimize window
# - send window to another space or display (optionally follow)
# 
# # Space
# 
# - Cycle between spaces
# - Go to most recently used space
# - Go to space at index
# - Create new space
# - Destroy space
# - Move space to display
# 
# # Display
# 
# - Focus other display

:: default
:: window @
:: space_ @
:: resize @

window, space_, resize < escape ; default
# treat ctrl - [ as escape (only for exiting modes)
window, space_, resize < ctrl - 0x21 ; default

default, window, space_, resize < ctrl - w ; window
default, window, space_, resize < ctrl - space ; space_

default < ctrl - o : yabai -m display --focus recent

# Window focus management
window < h [
    "iterm2" : (tmux lsp -F 'active=#{pane_active} at_left=#{pane_at_left}' | grep 'active=1 at_left=0' && \
                tmux select-pane -L) || yabai -m window --focus west ; skhd -k escape
    * : yabai -m window --focus west ; skhd -k escape
]
window < j [
    "iterm2" : (tmux lsp -F 'active=#{pane_active} at_bottom=#{pane_at_bottom}' | grep 'active=1 at_bottom=0' && \
                tmux select-pane -D) || \
               yabai -m window --focus south ; skhd -k escape
    * : yabai -m window --focus south ; skhd -k escape
]
window < k [
    "iterm2" : (tmux lsp -F 'active=#{pane_active} at_top=#{pane_at_top}' | grep 'active=1 at_top=0' && \
                tmux select-pane -U) || \
               yabai -m window --focus north ; skhd -k escape
    * : yabai -m window --focus north ; skhd -k escape
]
window < l [
    "iterm2" : (tmux lsp -F 'active=#{pane_active} at_right=#{pane_at_right}' | grep 'active=1 at_right=0' && \
                tmux select-pane -R) || \
               yabai -m window --focus east ; skhd -k escape
    * : yabai -m window --focus east ; skhd -k escape
]
window < o [
    "iterm2" : tmux select-pane -l || yabai -m window --focus recent ; skhd -k escape
    * : yabai -m window --focus recent ; skhd -k escape
]

# Window warping
window < shift - h : yabai -m window --warp west ; skhd -k escape
window < shift - j : yabai -m window --warp south ; skhd -k escape
window < shift - k : yabai -m window --warp north ; skhd -k escape
window < shift - l : yabai -m window --warp east ; skhd -k escape

# # Window resizing
# window < return : yabai -m window --ratio abs:.667 ; skhd -k escape
# window < shift - return : yabai -m window --ratio abs:.333 ; skhd -k escape
# Window resize state
window < r ; resize
resize < 0x18 : yabai -m window --ratio rel:+.1
resize < 0x1B : yabai -m window --ratio rel:-.1
resize < return ; default

# Misc window management
window < d : yabai -m window --close ; skhd -k escape
window < f : yabai -m window --toggle native-fullscreen ; skhd -k escape
window < return : yabai -m window --toggle zoom-fullscreen ; skhd -k escape
window < 0x1B : yabai -m window --minimize ; skhd -k escape
window < shift - m : yabai -m window --display recent ; skhd -k escape
window < m : yabai -m window --display recent && yabai -m display --focus recent ; skhd -k escape
window < space : yabai -m window --space recent && yabai -m space --focus recent ; skhd -k escape

# Send window to space by index
window < 1 : yabai -m window --space 1 ; skhd -k escape
window < 2 : yabai -m window --space 2 ; skhd -k escape
window < 3 : yabai -m window --space 3 ; skhd -k escape
window < 4 : yabai -m window --space 4 ; skhd -k escape
window < 5 : yabai -m window --space 5 ; skhd -k escape
window < 6 : yabai -m window --space 6 ; skhd -k escape
window < 7 : yabai -m window --space 7 ; skhd -k escape
window < 8 : yabai -m window --space 8 ; skhd -k escape
window < 9 : yabai -m window --space 9 ; skhd -k escape

# Space management
space_ < k : yabai -m space --rotate 90 ; skhd -k escape
space_ < j : yabai -m space --rotate 270 ; skhd -k escape
space_ < h : yabai -m space --rotate 180 ; skhd -k escape
space_ < o : yabai -m space --focus recent ; skhd -k escape
space_ < d : yabai -m space --destroy ; skhd -k escape
space_ < c : yabai -m space --create ; skhd -k escape

# Toggle space layout on or off
space_ < return : if [ "$(yabai -m query --spaces | jq -r 'map(select(.focused == 1)) | .[0].type')" = "float" ]; then yabai -m space --layout bsp; else yabai -m space --layout float; fi; skhd -k escape

# Space select by index
space_ < 1 : yabai -m space --focus 1 ; skhd -k escape
space_ < 2 : yabai -m space --focus 2 ; skhd -k escape
space_ < 3 : yabai -m space --focus 3 ; skhd -k escape
space_ < 4 : yabai -m space --focus 4 ; skhd -k escape
space_ < 5 : yabai -m space --focus 5 ; skhd -k escape
space_ < 6 : yabai -m space --focus 6 ; skhd -k escape
space_ < 7 : yabai -m space --focus 7 ; skhd -k escape
space_ < 8 : yabai -m space --focus 8 ; skhd -k escape
space_ < 9 : yabai -m space --focus 9 ; skhd -k escape

# This command is useful from window and space_ modes
space_, window < 0x18 [
    "iterm2" : (tmux lsp -F 'active=#{pane_active}' | grep 'active=1' && \
                tmux select-layout even-horizontal) || \
               yabai -m space --balance ; skhd -k escape
    * : yabai -m space --balance ; skhd -k escape
]
